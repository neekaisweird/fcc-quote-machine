{"version":3,"sources":["QuoteBox.js","App.js","index.js"],"names":["QuoteBox","quote","newQuote","loader","id","className","text","author","href","onClick","e","preventDefault","App","useState","setQuote","setLoader","getQuote","a","fetch","res","ok","Error","json","data","console","log","useEffect","ReactDOM","render","document","getElementById"],"mappings":"mNAsCeA,EApCE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAMnC,OAEE,yBAAKC,GAAG,aACLD,EACC,wBAAIE,UAAU,UAAd,cAEA,oCACE,wBAAID,GAAG,QAAQH,EAAMK,MACrB,wBAAIF,GAAG,UAAP,IAAkBH,EAAMM,SAG5B,yBAAKF,UAAU,WACb,uBACED,GAAG,cACHI,KACEL,EAAM,oFAEwCF,EAAMK,KAF9C,aAEuDL,EAAMM,SALvE,SAUA,4BAAQH,GAAG,YAAYK,QA3BT,SAAAC,GAClBA,EAAEC,iBACFT,MAyBI,gBCQOU,EAjCH,WAAO,IAAD,EACUC,qBADV,mBACTZ,EADS,KACFa,EADE,OAEYD,oBAAS,GAFrB,mBAETV,EAFS,KAEDY,EAFC,KAIVC,EAAQ,uCAAG,8BAAAC,EAAA,+EAEGC,MARN,oDAMG,WAETC,EAFS,QAGJC,GAHI,sBAIL,IAAIC,MAAM,+BAJL,uBAMIF,EAAIG,OANR,OAMTC,EANS,OAObT,EAAS,CAAER,KAAMiB,EAAKtB,MAAOM,OAAQgB,EAAKhB,SAC1CQ,GAAU,GARG,kDAUbS,QAAQC,IAAR,MAVa,0DAAH,qDAsBd,OAJAC,qBAAU,WACRV,MACC,IAGD,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAUF,OAAQA,EAAQF,MAAOA,EAAOC,SAV3B,WACfa,GAAU,GACVC,S,MCpBJW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.80d51765.chunk.js","sourcesContent":["import React from 'react';\n\nconst QuoteBox = ({ quote, newQuote, loader }) => {\n  const handleClick = e => {\n    e.preventDefault();\n    newQuote();\n  };\n\n  return (\n    // ids are used for freecodecamp\n    <div id=\"quote-box\">\n      {loader ? (\n        <h1 className=\"loader\">Loading...</h1>\n      ) : (\n        <>\n          <h1 id=\"text\">{quote.text}</h1>\n          <h4 id=\"author\">-{quote.author}</h4>\n        </>\n      )}\n      <div className=\"buttons\">\n        <a\n          id=\"tweet-quote\"\n          href={\n            loader\n              ? `https://twitter.com/intent/tweet`\n              : `https://twitter.com/intent/tweet?text=\"${quote.text}\" ${quote.author}`\n          }\n        >\n          Tweet\n        </a>\n        <button id=\"new-quote\" onClick={handleClick}>\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteBox;\n","import React, { useState, useEffect } from 'react';\nimport QuoteBox from './QuoteBox';\n\nconst API_URL = 'http://quotes.stormconsultancy.co.uk/random.json';\n\nconst App = () => {\n  const [quote, setQuote] = useState();\n  const [loader, setLoader] = useState(true);\n\n  const getQuote = async () => {\n    try {\n      let res = await fetch(API_URL);\n      if (!res.ok) {\n        throw new Error('Error with network response');\n      }\n      let data = await res.json();\n      setQuote({ text: data.quote, author: data.author });\n      setLoader(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const newQuote = () => {\n    setLoader(true);\n    getQuote();\n  };\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <QuoteBox loader={loader} quote={quote} newQuote={newQuote} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}